@model SwiftCourier.ViewModels.BookingDetailsViewModel

@{
    Layout = "_Print";
    ViewData["Title"] = "Bill Of Lading";
}

<div class="panel mb25">
    <div class="panel-body">
        <div class="row no-margin">
            <div class="col-lg-12">
                <div class="row">
                    <div class="col-lg-6">
                        Logo + Billing Mode + Date
                    </div>
                    <div class="col-lg-6">
                        Account # + Tracking #
                        + From Route - To Route
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-3">
                        Charges
                    </div>
                    <div class="col-lg-6">
                        Package description
                    </div>
                    <div class="col-lg-3">
                        Service
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        Text
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="panel mb25">
    <div class="panel-heading border">
        Bill Of Lading
    </div>
    <div class="panel-body">
        <div class="row no-margin">
            <div class="col-lg-12">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.CreatedBy)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.CreatedBy)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.CreatedAt)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.CreatedAt)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Customer.Name)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Customer.Name)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.RequestDate)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.RequestDate)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.PickupAddress)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.PickupAddress)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.PickupContactNumber)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.PickupContactNumber)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.ConsigneeName)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ConsigneeName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.ConsigneeContactNumber)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ConsigneeContactNumber)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.ConsigneeAddress)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ConsigneeAddress)
                    </dd>
                    @if (Model.Package != null)
                    {
                        <dt>@Html.DisplayNameFor(model => model.Package.PackageType.Name)</dt>
                        <dd>@Html.DisplayFor(model => model.Package.PackageType.Name)</dd>

                        <dt>@Html.DisplayNameFor(model => model.Package.Description)</dt>
                        <dd>@Html.DisplayFor(model => model.Package.Description)</dd>

                        <dt>@Html.DisplayNameFor(model => model.Package.Pieces)</dt>
                        <dd>@Html.DisplayFor(model => model.Package.Pieces)</dd>

                        <dt>@Html.DisplayNameFor(model => model.Package.Weight)</dt>
                        <dd>@Html.DisplayFor(model => model.Package.Weight)</dd>

                        <dt>@Html.DisplayNameFor(model => model.Package.SpecialInstructions)</dt>
                        <dd>@Html.DisplayFor(model => model.Package.SpecialInstructions)</dd>

                        <dt>@Html.DisplayNameFor(model => model.Package.TrackingNumber)</dt>
                        <dd>@Html.DisplayFor(model => model.Package.TrackingNumber)</dd>

                        @if (Model.Package.PickedUpAt != null)
                        {
                            <dt>@Html.DisplayNameFor(model => model.Package.PickedUpAt)</dt>
                            <dd>@Html.DisplayFor(model => model.Package.PickedUpAt)</dd>
                        }

                        @if (Model.Package.DeliveredAt != null)
                        {
                            <dt>@Html.DisplayNameFor(model => model.Package.DeliveredAt)</dt>
                            <dd>@Html.DisplayFor(model => model.Package.DeliveredAt)</dd>
                        }

                        @if (!string.IsNullOrEmpty(Model.Package.AssignedTo))
                        {
                            <dt>@Html.DisplayNameFor(model => model.Package.AssignedTo)</dt>
                            <dd>@Html.DisplayFor(model => model.Package.AssignedTo)</dd>
                        }

                        @if (!string.IsNullOrEmpty(Model.Package.DeliveredBy))
                        {
                            <dt>@Html.DisplayNameFor(model => model.Package.DeliveredBy)</dt>
                            <dd>@Html.DisplayFor(model => model.Package.DeliveredBy)</dd>
                        }

                        <dt>@Html.DisplayNameFor(model => model.Package.Status)</dt>
                        <dd>@Html.DisplayFor(model => model.Package.Status)</dd>
                    }
                    @if (Model.Invoice != null)
                    {
                        <dt>
                            @Html.DisplayNameFor(model => model.Invoice.ServiceCost)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Invoice.ServiceCost)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Invoice.GCT)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Invoice.GCT)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Invoice.Total)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Invoice.Total)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Invoice.BillingMode)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Invoice.BillingMode)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Invoice.Status)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Invoice.Status)
                        </dd>
                    }
                </dl>
            </div>
        </div>
    </div>
</div>
