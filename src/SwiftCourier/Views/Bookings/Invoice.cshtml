@using SwiftCourier.Helpers
@model SwiftCourier.ViewModels.BookingDetailsViewModel

@{
    ViewData["Title"] = "Invoice";
    var invoiceTermsAndPolicies = SettingsHelper.GetSettingValue(SettingKeys.InvoiceTermsAndPoliciesText);
}

<div class="main-content">
    <div class="mb15 clearfix">
        <div class="pull-right text-right">
            <p>@Model.CreatedAt</p>
            <h5 class="text-uppercase">Invoice #@Model.Id</h5>
            <h3>@Html.DisplayNameFor(model => model.Invoice.Status) : @Html.DisplayFor(model => model.Invoice.Status)</h3>
        </div>
        <div class="w150">
            <a onclick="window.print();" class="btn btn-danger btn-block text-left no-print mb15">
                <i class="ti-printer mr5"></i>Print
            </a>
            @if (Model.Invoice.Status.Equals(InvoiceStatus.Pending.ToString(), StringComparison.OrdinalIgnoreCase))
            {
                <a asp-action="Create" asp-controller="Payments" asp-route-id="@Model.Id" class="btn btn-info btn-block text-left no-print">
                    <i class="fa fa-dollar"></i> Make Payment
                </a>
            }
        </div>
    </div>
    <div class="row mb15">
        <div class="col-xs-12">
            <div class="row">
                <div class="col-xs-6">
                    <address class="no-margin">
                        <strong>Billed To:</strong><br>
                        @Model.CustomerName<br>
                        @Html.Raw(Model.PickupAddress.Replace("\r\n", "<br/>"))
                        <br />
                        @Model.PickupContactNumber
                    </address>
                </div>
                <div class="col-xs-6 text-right">
                    <address class="no-margin">
                        <strong>Shipped To:</strong><br>
                        @Model.ConsigneeName<br>
                        @Html.Raw(Model.ConsigneeAddress.Replace("\r\n", "<br/>"))
                        <br />
                        @Model.ConsigneeContactNumber
                    </address>
                </div>
            </div>
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered bl br">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ServiceName)</th>
                    <th>@Html.DisplayNameFor(model => model.Package.TrackingNumber)</th>
                    <th>@Html.DisplayNameFor(model => model.Invoice.ServiceCost)</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.DisplayFor(model => model.ServiceName)</td>
                    <th>@Html.DisplayFor(model => model.Package.TrackingNumber)</th>
                    <td>@Html.DisplayFor(model => model.Invoice.ServiceCost)</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="invoice-totals">
        <div class="invoice-totals-row">
            <strong class="invoice-totals-title">Subtotal</strong>
            <span class="invoice-totals-value">@Html.DisplayFor(model => model.Invoice.ServiceCost)</span>
        </div>
        <div class="invoice-totals-row">
            <strong class="invoice-totals-title">@Html.DisplayNameFor(model => model.Invoice.GCT)</strong>
            <span class="invoice-totals-value">@Html.DisplayFor(model => model.Invoice.GCT)</span>
        </div>
        <div class="invoice-totals-row">
            <strong class="invoice-totals-title">@Html.DisplayNameFor(model => model.Invoice.Total)</strong>
            <span class="invoice-totals-value">@Html.DisplayFor(model => model.Invoice.Total)</span>
        </div>
        <div class="invoice-totals-row">
            <strong class="invoice-totals-title">@Html.DisplayNameFor(model => model.Invoice.AmountPaid)</strong>
            <span class="invoice-totals-value">@Html.DisplayFor(model => model.Invoice.AmountPaid)</span>
        </div>
        <div class="invoice-totals-row">
            <strong class="invoice-totals-title">@Html.DisplayNameFor(model => model.Invoice.AmountDue)</strong>
            <span class="invoice-totals-value">@Html.DisplayFor(model => model.Invoice.AmountDue)</span>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(invoiceTermsAndPolicies))
    {
        <hr>
        <div class="clearfix mb15">
            <p class="bold small">PAYMENT TERMS AND POLICIES</p>
            <small>@invoiceTermsAndPolicies</small>
        </div>
    }
</div>

@section NavBarText {
    <text>Invoice</text>
}

@section Breadcrumbs {
    <ol class="breadcrumb">
        <li>
            <a asp-controller="Home" asp-action="Index">Home</a>
        </li>
        <li>
            <a asp-controller="Bookings" asp-action="Index">Bookings</a>
        </li>
        <li class="active ng-binding">
            <a href="javascript:;">Invoice</a>
        </li>
    </ol>
}
